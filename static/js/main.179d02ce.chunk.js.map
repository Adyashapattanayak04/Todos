{"version":3,"sources":["todoCard.jsx","todos.jsx","todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoCard","props","todo","id","title","completed","history","useHistory","style","backgroundColor","margin","padding","color","width","onClick","push","fontSize","textDecoration","fontFamily","fontWeight","fontStyle","Todos","useState","undefined","todos","setTodos","useEffect","axios","get","then","res","responseTodos","data","console","log","display","flexWrap","slice","map","CircularProgress","Todo","useParams","todoDetails","setTodoDetails","responseTodo","userId","App","className","exact","path","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA8CeA,EA5CE,SAACC,GACf,IAAMC,EAASD,EAATC,KACEC,EAA2BD,EAA3BC,GAAKC,EAAsBF,EAAtBE,MAAQC,EAAcH,EAAdG,UAEhBC,EAAUC,cAEd,OACI,sBAAMC,MAAO,CACTC,gBAAkB,SAClBC,OAAQ,OACRC,QAAS,OACTC,MAAM,QACNC,MAAO,SAEXC,QAAU,kBAAMR,EAAQS,KAAR,gBAAsBZ,KAPtC,UAUI,oBAAIK,MAAO,CACPI,MAAO,SACPI,SAAS,OACTC,eAAe,YACfC,WAAW,aACXC,WAAW,QALf,SAOIf,IACJ,oBAAII,MAAO,CAEPQ,SAAS,OAETE,WAAW,UACXE,UAAU,UALd,8BAOkBf,SCSfgB,EAvCD,WAEV,MAA2BC,wBAASC,GAApC,mBAAQC,EAAR,KAAeC,EAAf,KAWA,OATAC,qBAAU,WACNC,IAAMC,IAAN,8CAAwDC,MAAK,SAACC,GAC1D,IAAMC,EAAgBD,EAAIE,KAC1BP,EAASM,QAEf,IAGDE,QAAQC,IAAIV,GAET,mCACCA,EACD,qBAAMhB,MAAO,CAET2B,QAAQ,OACRC,SAAS,QAHb,SAMKZ,EAAMa,MAAM,EAAE,IAAIC,KAAK,SAAApC,GAAI,OACxB,aADkC,CACjC,EAAD,CAAUA,KAAMA,SAMtB,cAACqC,EAAA,EAAD,OCYKC,EAxCF,WAGT,IAAQrC,EAAOsC,cAAPtC,GAIR,EAAuCmB,qBAAvC,mBAAQoB,EAAR,KAAqBC,EAArB,KAEAjB,qBAAU,WACNC,IAAMC,IAAN,qDAAwDzB,IAAM0B,MAAK,SAACC,GAChE,IAAMc,EAAed,EAAIE,KACzBW,EAAeC,QAErB,IAEF,MAA+CF,GAAe,GAA3CG,GAAnB,EAAO1C,GAAP,EAAmB0C,QAAQzC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,UACnC,OACI,8BACKqC,EACD,oCAAM,gDAAiBvC,KACvB,oDAAqB0C,KACrB,mDAAoBzC,KACpB,kDAAmBC,QAKnB,cAACkC,EAAA,EAAD,OCHIO,MAtBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UAEE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAIC,SAAW,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,YAAYC,SAAW,cAAC,EAAD,cCJ9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.179d02ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nconst TodoCard = (props) => {\r\n   const{todo } = props;\r\n    const {id,  title , completed } = todo;\r\n\r\n    let history = useHistory();\r\n\r\n    return(\r\n        <div  style={{\r\n            backgroundColor : \"purple\",\r\n            margin :\"10px\",\r\n            padding: \"10px\",\r\n            color:\"white\",\r\n            width: \"500px\"\r\n        }}\r\n        onClick= {() => history.push(`/todo/${id}`)}\r\n        \r\n        >\r\n            <h4 style={{\r\n                color: \"yellow\",\r\n                fontSize:\"20px\",\r\n                textDecoration:\"underline\",\r\n                fontFamily:\"sans-serif\",\r\n                fontWeight:\"bold\"\r\n\r\n            }}>{title}</h4>\r\n            <h6 style={{\r\n              \r\n                fontSize:\"20px\",\r\n                \r\n                fontFamily:\"cursive\",\r\n                fontStyle:\"normal\"\r\n\r\n            }}>{`Completed: ${completed}`}</h6>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n};\r\nexport default TodoCard;\r\n\r\n","import React, {useEffect, useState } from \"react\";\r\nimport axios from'axios';  //axios helps to make post request\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport TodoCard from \"./todoCard\";\r\nconst Todos = () => {\r\n\r\n    const [ todos, setTodos] = useState(undefined);\r\n\r\n    useEffect(() => {    //useffect to call api\r\n        axios.get(`https://jsonplaceholder.typicode.com/todos`).then((res) =>{\r\n            const responseTodos = res.data;  //getting data from api\r\n            setTodos(responseTodos);\r\n        });\r\n    },[]);   //[] makes sure that this useeffect is run as soon as this \r\n             //component is first mounted,if component is refreshed it checks it will not run again\r\n\r\n     console.log(todos);\r\n    return (\r\n        <>\r\n        {todos ? (\r\n        <div  style={{\r\n\r\n            display:\"flex\",\r\n            flexWrap:\"wrap\"\r\n\r\n        }}>\r\n            {todos.slice(0,10).map( todo => (     //rendering todocard comp\r\n                <TodoCard todo={todo} />\r\n            ))}\r\n        </div>\r\n        \r\n        \r\n        )\r\n        : <CircularProgress />}\r\n\r\n        </>\r\n\r\n    );\r\n    // <h1> This is todos component</h1>;\r\n\r\n\r\n};\r\n\r\nexport default Todos;","import React, {useState, useEffect} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Todo = () => {\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n\r\n\r\n    const [ todoDetails, setTodoDetails] = useState();\r\n\r\n    useEffect(() => {    //useffect to call api\r\n        axios.get(`https://jsonplaceholder.typicode.com/todos/${id}`).then((res) =>{\r\n            const responseTodo = res.data;  //getting data from api\r\n            setTodoDetails(responseTodo);\r\n        });\r\n    },[]);   \r\n\r\n    const {id: todoId, userId, title, completed} = todoDetails || {};\r\n   return(\r\n       <div>\r\n           {todoDetails? (\r\n           <div> <h1>{`Todo Id: ${id}`}</h1>\r\n           <h1>{`Todo userId: ${userId}`}</h1>\r\n           <h1>{`Todo title: ${title}`}</h1>\r\n           <h1>{`Completed: ${completed}`}</h1>\r\n           </div>\r\n           )\r\n           \r\n           : \r\n           <CircularProgress />}\r\n\r\n          \r\n       </div>\r\n\r\n\r\n\r\n   );\r\n\r\n\r\n};\r\n\r\nexport default Todo;","import React from 'react';\n\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Todos from \"./todos\";\nimport Todo from \"./todo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n\n        <Switch>\n\n          <Route exact path =\"/\" children={ <Todos />} />\n          <Route path=\"/todo/:id\" children={ <Todo />} />\n        </Switch>\n\n\n\n\n\n\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}